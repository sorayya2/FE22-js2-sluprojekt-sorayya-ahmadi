{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAIO,MAAMC,EAEXC,YACkBC,EACAC,EACAC,EACAC,G,QAHAH,E,cACAC,E,aACAC,E,eACAC,EAGhBC,KAAKC,YACP,CACQA,aAEN,MAAMC,EAAaC,SAASC,eAAe,iBACrCC,EAAeF,SAASG,cAAc,OAC5CJ,EAAWK,OAAOF,GAClBA,EAAaG,UAAUC,IAAIT,KAAKJ,GAAI,gBAEpC,MAAMc,EAAkBP,SAASG,cAAc,MAC/CI,EAAgBC,UAAYX,KAAKD,UAAY,GAAGC,KAAKH,iBAAiBG,KAAKF,UAC3EO,EAAaE,OAAOG,GAEpB,MAAME,EAAYT,SAASG,cAAc,UACzCM,EAAUD,UAAY,IAClBX,KAAKH,UAAYgB,eAAeC,QAAQ,SAE1CT,EAAaE,OAAOK,GAGtBA,EAAUG,iBAAiB,SAAS,KAGlC,GADiBF,eAAeC,QAAQ,SACxBD,eAAeC,QAAQ,QACvC,CACE,MAAME,GAAS,EAAAxB,EAAAyB,KAAIC,EAAAC,GAAI,iBAAmBnB,KAAKJ,KAC/C,EAAAJ,EAAA4B,QAAOJ,EACT,IAEJ,CACOK,WAELlB,SAASmB,cAAc,IAAItB,KAAKJ,MAAMwB,QACxC,EAEF,MAAMG,GAAQ,EAAA/B,EAAAyB,KAAIC,EAAAC,GAAI,kBACtB,IAAIK,EAAuB,IAC3B,EAAAhC,EAAAiC,SAAQF,GAAQG,IAEd,MAAMC,EAAcD,EAASE,MAC7B,IAAK,MAAM9B,KAAW0B,EAEpB1B,EAAQuB,WAEVG,EAAW,GACX,IAAK,MAAMK,KAAOF,EAEhBH,EAASM,KACP,IAAIpC,EACFmC,EACAF,EAAaE,GAAME,KACnBJ,EAAaE,GAAM/B,QACnB6B,EAAaE,GAAM9B,aA2D3B,WAEE,MAAMiC,EAAI7B,SAASC,eAAe,iBAClC4B,EAAEC,UAAYD,EAAEE,YAClB,CA3DEC,GAcIR,GAbJ,WAEE,MAAMS,EAAeC,OAAOC,OAAOX,GAC7BY,EAASF,OAAOG,KAAKb,GAAc,GACzC,IAAK,IAAIc,EAAI,EAAGA,EAAIL,EAAaM,OAAQD,IAEvC,GAAIL,EAAaM,OAAS,GAC1B,CACE,MAAMC,GAAO,EAAAnD,EAAAyB,KAAIC,EAAAC,GAAI,iBAAmBoB,IACxC,EAAA/C,EAAA4B,QAAOuB,EACT,CAEJ,CAGEC,EAAA,IAGkC,MAAlC/B,eAAeC,QAAQ,QAEzBX,SAASC,eAAe,QAAQyC,MAAMC,WAAa,UAKnD3C,SAASC,eAAe,QAAQyC,MAAMC,WAAa,UACnD3C,SAASC,eAAe,QAAQW,iBAAiB,SAAUiB,IAEzDA,EAAEe,iBACF,MAAMjD,EAAUK,SAASC,eAAe,eAClC4C,EAAO,IAAIC,KACXC,EAAe,CACnBnD,UACEiD,EAAKG,cACL,KACCH,EAAKI,WAAa,GACnB,IACAJ,EAAKK,aACL,MACAL,EAAKM,WACL,IACAN,EAAKO,aACL,KACFxB,KAAMlB,eAAeC,QAAQ,QAC7BhB,QAASA,EAAQ0D,OAIbC,EAAa,CAAC,EACpBA,GAFuB,EAAAjE,EAAAsC,MAAKP,GAAOM,KAEZqB,GACvB,EAAA1D,EAAAkE,QAAOnC,EAAOkC,EAAA,KCvHhBtD,SAASC,eAAe,iBAAiBW,iBAAiB,SAAS,KACjEF,eAAe8C,OAAK","sources":["src/modules/messagesShows.ts","src/modules/logout.ts"],"sourcesContent":["import { get, ref, remove, update, onValue, push } from \"firebase/database\";\nimport { db } from \"./firebaseApp\";\nimport { logOut } from \"./logout\";\n\nexport class Messages\n{\n  constructor(\n    public readonly id: string,\n    public readonly userName: string,\n    public readonly message: string,\n    public readonly timeStamp: string\n  )\n  {\n    this.displayMsg();\n  }\n  private displayMsg(): void\n  {\n    const msgWrapper = document.getElementById(\"messagesShows\");\n    const msgContainer = document.createElement(\"div\") as HTMLDivElement;\n    msgWrapper.append(msgContainer);\n    msgContainer.classList.add(this.id, \"chat-styling\");\n\n    const userNameElement = document.createElement(\"h4\") as HTMLHeadElement;\n    userNameElement.innerText = this.timeStamp + `${this.userName} says ${this.message}`;\n    msgContainer.append(userNameElement);\n\n    const removeBtn = document.createElement(\"button\") as HTMLButtonElement;\n    removeBtn.innerText = \"X\";\n    if (this.userName == sessionStorage.getItem(\"user\"))\n    {\n      msgContainer.append(removeBtn);\n    }\n\n    removeBtn.addEventListener(\"click\", () =>\n    {\n      const userName = sessionStorage.getItem(\"user\");\n      if (userName == sessionStorage.getItem(\"user\"))\n      {\n        const msgRef = ref(db, \"/Topics/Shows/\" + this.id);\n        remove(msgRef);\n      }\n    });\n  }\n  public clearDOM(): void\n  {\n    document.querySelector(`.${this.id}`).remove();\n  }\n}\nconst dbRef = ref(db, \"/Topics/Shows/\");\nlet messages: Messages[] = [];\nonValue(dbRef, (snapshot) =>\n{\n  const messageData = snapshot.val();\n  for (const message of messages)\n  {\n    message.clearDOM();\n  }\n  messages = [];\n  for (const key in messageData)\n  {\n    messages.push(\n      new Messages(\n        key,\n        messageData[ key ].name,\n        messageData[ key ].message,\n        messageData[ key ].timeStamp\n      )\n    );\n  }\n  scrollDown();\n  function postLimiter(): void\n  {\n    const messageArray = Object.values(messageData);\n    const index0 = Object.keys(messageData)[ 0 ];\n    for (let i = 0; i < messageArray.length; i++)\n    {\n      if (messageArray.length > 25)\n      {\n        const post = ref(db, \"/Topics/Shows/\" + index0);\n        remove(post);\n      }\n    }\n  }\n  if (messageData)\n  {\n    postLimiter();\n  }\n});\nif (sessionStorage.getItem(\"user\") == null || undefined || \"\")\n{\n  document.getElementById(\"send\").style.visibility = \"hidden\";\n}\n\nelse\n{\n  document.getElementById(\"send\").style.visibility = \"visible\";\n  document.getElementById(\"send\").addEventListener(\"click\", (e) =>\n  {\n    e.preventDefault();\n    const message = document.getElementById(\"userMessage\") as HTMLInputElement;\n    const date = new Date();\n    const messageToAdd = {\n      timeStamp:\n        date.getFullYear() +\n        \" \" +\n        (date.getMonth() + 1) +\n        \"/\" +\n        date.getUTCDate() +\n        \" - \" +\n        date.getHours() +\n        \":\" +\n        date.getMinutes() +\n        \": \",\n      name: sessionStorage.getItem(\"user\"),\n      message: message.value\n    };\n\n    const newKey: string = push(dbRef).key;\n    const newMessage = {};\n    newMessage[ newKey ] = messageToAdd;\n    update(dbRef, newMessage);\n  });\n}\n\nfunction scrollDown(): void\n{\n  const e = document.getElementById(\"messagesShows\");\n  e.scrollTop = e.scrollHeight;\n}\nlogOut();","export function logOut(): void {\n  document.getElementById(\"logout-button\").addEventListener(\"click\", () => {\n    sessionStorage.clear();\n  });\n}\n"],"names":["$gdelx","parcelRequire","$67badecc6e4369d1$export$ceaacf8b390a3600","constructor","id","userName","message","timeStamp","this","displayMsg","msgWrapper","document","getElementById","msgContainer","createElement","append","classList","add","userNameElement","innerText","removeBtn","sessionStorage","getItem","addEventListener","msgRef","ref","$7McF0","db","remove","clearDOM","querySelector","$67badecc6e4369d1$var$dbRef","$67badecc6e4369d1$var$messages","onValue","snapshot","messageData","val","key","push","name","e","scrollTop","scrollHeight","$67badecc6e4369d1$var$scrollDown","messageArray","Object","values","index0","keys","i","length","post","postLimiter","style","visibility","preventDefault","date","Date","messageToAdd","getFullYear","getMonth","getUTCDate","getHours","getMinutes","value","newMessage","update","clear"],"version":3,"file":"forumShows.84b16bde.js.map"}